apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "custom-generic.fullname" . }}
  labels:
    {{- include "custom-generic.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "custom-generic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "custom-generic.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "custom-generic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Release.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.volumeMounts .Values.pv.enabled }}
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- if .Values.pv.enabled }}
            - name: pv-storage
              mountPath: {{ .Values.pv.mountPath }}
            {{- end }}
          {{- end }}
          {{- if .Values.envConfigMap }}
          envFrom:
          - configMapRef:
              name: {{ .Values.envConfigMap }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: {{ .Values.hostNetwork | default "false" }}
      dnsPolicy: {{ .Values.dnsPolicy | default "ClusterFirst"}}
      {{- if or .Values.volumes .Values.pv.enabled }}
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
        {{- if .Values.pv.enabled }}
        - name: pv-storage
          persistentVolumeClaim: 
            claimName: pv-smb-{{ .Release.Name }}
        {{- end }}
      {{- end }}
